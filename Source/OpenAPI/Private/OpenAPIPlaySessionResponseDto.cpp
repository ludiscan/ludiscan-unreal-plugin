/**
 * API Documentation
 * The API description
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIPlaySessionResponseDto.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIPlaySessionResponseDto::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("sessionId")); WriteJsonValue(Writer, SessionId);
	Writer->WriteIdentifierPrefix(TEXT("projectId")); WriteJsonValue(Writer, ProjectId);
	Writer->WriteIdentifierPrefix(TEXT("name")); WriteJsonValue(Writer, Name);
	if (DeviceId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("deviceId")); WriteJsonValue(Writer, DeviceId.GetValue());
	}
	if (Platform.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("platform")); WriteJsonValue(Writer, Platform.GetValue());
	}
	if (AppVersion.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("appVersion")); WriteJsonValue(Writer, AppVersion.GetValue());
	}
	if (MetaData.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("metaData")); WriteJsonValue(Writer, MetaData.GetValue());
	}
	Writer->WriteIdentifierPrefix(TEXT("startTime")); WriteJsonValue(Writer, StartTime);
	if (EndTime.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("endTime")); WriteJsonValue(Writer, EndTime.GetValue());
	}
	Writer->WriteIdentifierPrefix(TEXT("isPlaying")); WriteJsonValue(Writer, IsPlaying);
	Writer->WriteObjectEnd();
}

bool OpenAPIPlaySessionResponseDto::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("sessionId"), SessionId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("projectId"), ProjectId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("name"), Name);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("deviceId"), DeviceId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("platform"), Platform);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("appVersion"), AppVersion);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("metaData"), MetaData);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("startTime"), StartTime);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("endTime"), EndTime);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("isPlaying"), IsPlaying);

	return ParseSuccess;
}

}
