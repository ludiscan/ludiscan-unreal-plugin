/**
 * API Documentation
 * The API description
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "OpenAPIBaseModel.h"

namespace OpenAPI
{

class OPENAPI_API OpenAPIV0Api
{
public:
	OpenAPIV0Api();
	~OpenAPIV0Api();

	/* Sets the URL Endpoint.
	* Note: several fallback endpoints can be configured in request retry policies, see Request::SetShouldRetry */
	void SetURL(const FString& Url);

	/* Adds global header params to all requests */
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	/* Sets the retry manager to the user-defined retry manager. User must manage the lifetime of the retry manager.
	* If no retry manager is specified and a request needs retries, a default retry manager will be used.
	* See also: Request::SetShouldRetry */
	void SetHttpRetryManager(FHttpRetrySystem::FManager& RetryManager);
	FHttpRetrySystem::FManager& GetHttpRetryManager();

	class HeatmapControllerCreateProjectTaskRequest;
	class HeatmapControllerCreateProjectTaskResponse;
	class HeatmapControllerCreateSessionTaskRequest;
	class HeatmapControllerCreateSessionTaskResponse;
	class HeatmapControllerGetTaskRequest;
	class HeatmapControllerGetTaskResponse;
	class PlaySessionControllerCalcNumberFieldRequest;
	class PlaySessionControllerCalcNumberFieldResponse;
	class PlaySessionControllerCreateRequest;
	class PlaySessionControllerCreateResponse;
	class PlaySessionControllerDeleteRequest;
	class PlaySessionControllerDeleteResponse;
	class PlaySessionControllerDeleteAllRequest;
	class PlaySessionControllerDeleteAllResponse;
	class PlaySessionControllerFindAllRequest;
	class PlaySessionControllerFindAllResponse;
	class PlaySessionControllerFindOneRequest;
	class PlaySessionControllerFindOneResponse;
	class PlaySessionControllerFinishRequest;
	class PlaySessionControllerFinishResponse;
	class PlaySessionControllerUpdateRequest;
	class PlaySessionControllerUpdateResponse;
	class PlayerPositionLogControllerGetRequest;
	class PlayerPositionLogControllerGetResponse;
	class PlayerPositionLogControllerPostRequest;
	class PlayerPositionLogControllerPostResponse;
	class ProjectsControllerCreateRequest;
	class ProjectsControllerCreateResponse;
	class ProjectsControllerDeleteRequest;
	class ProjectsControllerDeleteResponse;
	class ProjectsControllerFindAllRequest;
	class ProjectsControllerFindAllResponse;
	class ProjectsControllerGetMetaDataKeysRequest;
	class ProjectsControllerGetMetaDataKeysResponse;
	class UsersControllerCreateRequest;
	class UsersControllerCreateResponse;
	class UsersControllerFindAllRequest;
	class UsersControllerFindAllResponse;
	class UsersControllerFindOneRequest;
	class UsersControllerFindOneResponse;
	
    DECLARE_DELEGATE_OneParam(FHeatmapControllerCreateProjectTaskDelegate, const HeatmapControllerCreateProjectTaskResponse&);
    DECLARE_DELEGATE_OneParam(FHeatmapControllerCreateSessionTaskDelegate, const HeatmapControllerCreateSessionTaskResponse&);
    DECLARE_DELEGATE_OneParam(FHeatmapControllerGetTaskDelegate, const HeatmapControllerGetTaskResponse&);
    DECLARE_DELEGATE_OneParam(FPlaySessionControllerCalcNumberFieldDelegate, const PlaySessionControllerCalcNumberFieldResponse&);
    DECLARE_DELEGATE_OneParam(FPlaySessionControllerCreateDelegate, const PlaySessionControllerCreateResponse&);
    DECLARE_DELEGATE_OneParam(FPlaySessionControllerDeleteDelegate, const PlaySessionControllerDeleteResponse&);
    DECLARE_DELEGATE_OneParam(FPlaySessionControllerDeleteAllDelegate, const PlaySessionControllerDeleteAllResponse&);
    DECLARE_DELEGATE_OneParam(FPlaySessionControllerFindAllDelegate, const PlaySessionControllerFindAllResponse&);
    DECLARE_DELEGATE_OneParam(FPlaySessionControllerFindOneDelegate, const PlaySessionControllerFindOneResponse&);
    DECLARE_DELEGATE_OneParam(FPlaySessionControllerFinishDelegate, const PlaySessionControllerFinishResponse&);
    DECLARE_DELEGATE_OneParam(FPlaySessionControllerUpdateDelegate, const PlaySessionControllerUpdateResponse&);
    DECLARE_DELEGATE_OneParam(FPlayerPositionLogControllerGetDelegate, const PlayerPositionLogControllerGetResponse&);
    DECLARE_DELEGATE_OneParam(FPlayerPositionLogControllerPostDelegate, const PlayerPositionLogControllerPostResponse&);
    DECLARE_DELEGATE_OneParam(FProjectsControllerCreateDelegate, const ProjectsControllerCreateResponse&);
    DECLARE_DELEGATE_OneParam(FProjectsControllerDeleteDelegate, const ProjectsControllerDeleteResponse&);
    DECLARE_DELEGATE_OneParam(FProjectsControllerFindAllDelegate, const ProjectsControllerFindAllResponse&);
    DECLARE_DELEGATE_OneParam(FProjectsControllerGetMetaDataKeysDelegate, const ProjectsControllerGetMetaDataKeysResponse&);
    DECLARE_DELEGATE_OneParam(FUsersControllerCreateDelegate, const UsersControllerCreateResponse&);
    DECLARE_DELEGATE_OneParam(FUsersControllerFindAllDelegate, const UsersControllerFindAllResponse&);
    DECLARE_DELEGATE_OneParam(FUsersControllerFindOneDelegate, const UsersControllerFindOneResponse&);
    
    FHttpRequestPtr HeatmapControllerCreateProjectTask(const HeatmapControllerCreateProjectTaskRequest& Request, const FHeatmapControllerCreateProjectTaskDelegate& Delegate = FHeatmapControllerCreateProjectTaskDelegate()) const;
    FHttpRequestPtr HeatmapControllerCreateSessionTask(const HeatmapControllerCreateSessionTaskRequest& Request, const FHeatmapControllerCreateSessionTaskDelegate& Delegate = FHeatmapControllerCreateSessionTaskDelegate()) const;
    FHttpRequestPtr HeatmapControllerGetTask(const HeatmapControllerGetTaskRequest& Request, const FHeatmapControllerGetTaskDelegate& Delegate = FHeatmapControllerGetTaskDelegate()) const;
    FHttpRequestPtr PlaySessionControllerCalcNumberField(const PlaySessionControllerCalcNumberFieldRequest& Request, const FPlaySessionControllerCalcNumberFieldDelegate& Delegate = FPlaySessionControllerCalcNumberFieldDelegate()) const;
    FHttpRequestPtr PlaySessionControllerCreate(const PlaySessionControllerCreateRequest& Request, const FPlaySessionControllerCreateDelegate& Delegate = FPlaySessionControllerCreateDelegate()) const;
    FHttpRequestPtr PlaySessionControllerDelete(const PlaySessionControllerDeleteRequest& Request, const FPlaySessionControllerDeleteDelegate& Delegate = FPlaySessionControllerDeleteDelegate()) const;
    FHttpRequestPtr PlaySessionControllerDeleteAll(const PlaySessionControllerDeleteAllRequest& Request, const FPlaySessionControllerDeleteAllDelegate& Delegate = FPlaySessionControllerDeleteAllDelegate()) const;
    FHttpRequestPtr PlaySessionControllerFindAll(const PlaySessionControllerFindAllRequest& Request, const FPlaySessionControllerFindAllDelegate& Delegate = FPlaySessionControllerFindAllDelegate()) const;
    FHttpRequestPtr PlaySessionControllerFindOne(const PlaySessionControllerFindOneRequest& Request, const FPlaySessionControllerFindOneDelegate& Delegate = FPlaySessionControllerFindOneDelegate()) const;
    FHttpRequestPtr PlaySessionControllerFinish(const PlaySessionControllerFinishRequest& Request, const FPlaySessionControllerFinishDelegate& Delegate = FPlaySessionControllerFinishDelegate()) const;
    FHttpRequestPtr PlaySessionControllerUpdate(const PlaySessionControllerUpdateRequest& Request, const FPlaySessionControllerUpdateDelegate& Delegate = FPlaySessionControllerUpdateDelegate()) const;
    FHttpRequestPtr PlayerPositionLogControllerGet(const PlayerPositionLogControllerGetRequest& Request, const FPlayerPositionLogControllerGetDelegate& Delegate = FPlayerPositionLogControllerGetDelegate()) const;
    FHttpRequestPtr PlayerPositionLogControllerPost(const PlayerPositionLogControllerPostRequest& Request, const FPlayerPositionLogControllerPostDelegate& Delegate = FPlayerPositionLogControllerPostDelegate()) const;
    FHttpRequestPtr ProjectsControllerCreate(const ProjectsControllerCreateRequest& Request, const FProjectsControllerCreateDelegate& Delegate = FProjectsControllerCreateDelegate()) const;
    FHttpRequestPtr ProjectsControllerDelete(const ProjectsControllerDeleteRequest& Request, const FProjectsControllerDeleteDelegate& Delegate = FProjectsControllerDeleteDelegate()) const;
    FHttpRequestPtr ProjectsControllerFindAll(const ProjectsControllerFindAllRequest& Request, const FProjectsControllerFindAllDelegate& Delegate = FProjectsControllerFindAllDelegate()) const;
    FHttpRequestPtr ProjectsControllerGetMetaDataKeys(const ProjectsControllerGetMetaDataKeysRequest& Request, const FProjectsControllerGetMetaDataKeysDelegate& Delegate = FProjectsControllerGetMetaDataKeysDelegate()) const;
    FHttpRequestPtr UsersControllerCreate(const UsersControllerCreateRequest& Request, const FUsersControllerCreateDelegate& Delegate = FUsersControllerCreateDelegate()) const;
    FHttpRequestPtr UsersControllerFindAll(const UsersControllerFindAllRequest& Request, const FUsersControllerFindAllDelegate& Delegate = FUsersControllerFindAllDelegate()) const;
    FHttpRequestPtr UsersControllerFindOne(const UsersControllerFindOneRequest& Request, const FUsersControllerFindOneDelegate& Delegate = FUsersControllerFindOneDelegate()) const;
    
private:
    void OnHeatmapControllerCreateProjectTaskResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FHeatmapControllerCreateProjectTaskDelegate Delegate) const;
    void OnHeatmapControllerCreateSessionTaskResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FHeatmapControllerCreateSessionTaskDelegate Delegate) const;
    void OnHeatmapControllerGetTaskResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FHeatmapControllerGetTaskDelegate Delegate) const;
    void OnPlaySessionControllerCalcNumberFieldResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPlaySessionControllerCalcNumberFieldDelegate Delegate) const;
    void OnPlaySessionControllerCreateResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPlaySessionControllerCreateDelegate Delegate) const;
    void OnPlaySessionControllerDeleteResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPlaySessionControllerDeleteDelegate Delegate) const;
    void OnPlaySessionControllerDeleteAllResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPlaySessionControllerDeleteAllDelegate Delegate) const;
    void OnPlaySessionControllerFindAllResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPlaySessionControllerFindAllDelegate Delegate) const;
    void OnPlaySessionControllerFindOneResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPlaySessionControllerFindOneDelegate Delegate) const;
    void OnPlaySessionControllerFinishResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPlaySessionControllerFinishDelegate Delegate) const;
    void OnPlaySessionControllerUpdateResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPlaySessionControllerUpdateDelegate Delegate) const;
    void OnPlayerPositionLogControllerGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPlayerPositionLogControllerGetDelegate Delegate) const;
    void OnPlayerPositionLogControllerPostResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPlayerPositionLogControllerPostDelegate Delegate) const;
    void OnProjectsControllerCreateResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FProjectsControllerCreateDelegate Delegate) const;
    void OnProjectsControllerDeleteResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FProjectsControllerDeleteDelegate Delegate) const;
    void OnProjectsControllerFindAllResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FProjectsControllerFindAllDelegate Delegate) const;
    void OnProjectsControllerGetMetaDataKeysResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FProjectsControllerGetMetaDataKeysDelegate Delegate) const;
    void OnUsersControllerCreateResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUsersControllerCreateDelegate Delegate) const;
    void OnUsersControllerFindAllResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUsersControllerFindAllDelegate Delegate) const;
    void OnUsersControllerFindOneResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUsersControllerFindOneDelegate Delegate) const;
    
	FHttpRequestRef CreateHttpRequest(const Request& Request) const;
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
	mutable FHttpRetrySystem::FManager* RetryManager = nullptr;
	mutable TUniquePtr<HttpRetryManager> DefaultRetryManager;
};

}
